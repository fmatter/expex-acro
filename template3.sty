%    \begin{macrocode}
\RequirePackage{expex}
\RequirePackage{etoolbox}
\RequirePackage{xspace}
\RequirePackage{l3keys2e}
\RequirePackage{acro}
\RequirePackage{enumitem}

\NewAcroTemplate[list]{glossinglist}{%
 \acroheading
 \acropreamble
 \begin{description}[font=\normalfont]
   \acronymsmapF{%
     \item[\acrowrite{short}\acroifT{alt}{/\acrowrite{alt}}]
     \acrowrite{list}%
     \acroifanyT{foreign,extra}{ (}%
     \acroifT{foreign}{\acrowrite{foreign}\acroifT{extra}{, }}%
     \acroifT{extra}{\acrowrite{extra}}%
     \acroifanyT{foreign,extra}{)}%
     \acropagefill
     \acropages
     {\acrotranslate{page}\nobreakspace}
     {\acrotranslate{pages}\nobreakspace}%
   }
   {\item\AcroRerun}
 \end{description}
}

\ExplSyntaxOn
\keys_define:nn { expex-acro }{
  abbrevs .tl_set:N = \l_abbrevs_tl,
  abbrevs .initial:n = none,
  refmode .tl_set:N = \l_refmode_tl,
  refmode .initial:n = expex,
}
\ProcessKeysOptions{expex-acro}
\str_if_eq:VnT \l_abbrevs_tl {leipzig} {
<<LEIPZIG_PLACEHOLDER>>
} 
\str_if_eq:VnT \l_abbrevs_tl {all} {
<<LEIPZIG_PLACEHOLDER>>
%BREAK
<<ABBREV_PLACEHOLDER>>
}
\ExplSyntaxOff
%    \end{macrocode}


\gathertags
\lingset{everygla=}

%\begin{macro}{\exref}
%Refer to examples, e.g. |\exref{kwaza-3}|. Use |\exref[a]{b}| to get (Xa-b).
%    \begin{macrocode}
\ExplSyntaxOn
\str_if_eq:VnTF \l_refmode_tl {expex} {
    \ProvideDocumentCommand{\exref}{ o m }{
        \IfValueTF{#1} {
            (\getfullref{#1}--\getref{#2})
        }{
            (\getfullref{#2})
        }
    }
} {
    \ProvideDocumentCommand{\exref}{ o o m }{
        \IfValueTF{#1} {
            \IfValueTF{#2} {
                (\ref{#3}-\ref{#2}#1)
            }{
                (\ref{#3}#1)
            }
        }{
            \IfValueTF{#2} {
                (\ref{#3}-\ref{#2})
            }{
                (\ref{#3})
            }
            
        }
        
    }
}

%    \end{macrocode}
%\end{macro}

%\begin{macro}{\exrefnil}
%Refer to examples without explicit numbers.
%    \begin{macrocode}
\ProvideDocumentCommand{\exrefnil}{ o m }{
\IfValueTF{#1} {
    (\getref{#1}--\getref{#2})
}{
    (\getref{#2})
}
}
%    \end{macrocode}
%\end{macro}


%\begin{macro}{\mexref}
%For multiple, non-adjacent examples.
%    \begin{macrocode}
\providecommand{\mexref}[2][, ]{%
(%
  \def\nextitem{\def\nextitem{#1}}% Separator
  \renewcommand*{\do}[1]{\nextitem\getfullref{##1}}% How to process each item
  \docsvlist{#2}% Process list
)%
}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\gl}
%    \begin{macrocode}
\providecommand{\gl}[1]{\acs{#1}}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\newGlossingAbbrev}
%Define a new glossing abbreviation: |\newGlossingAbbrev{occ}{occultive}|.
%    \begin{macrocode}
\providecommand{\newGlossingAbbrev}[2]{
    \DeclareAcronym{#1}{
        short=#1,
        long=#2,
        short-format=\scshape,
        }
    }
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\glossingAbbrevsList}
%Print the list of glossing abbreviations.
%    \begin{macrocode}
\newcommand{\glossingAbbrevsList}{
    \printacronyms[
        template=glossinglist,
        name=Glossing abbreviations,
        heading=none
        ]
    }
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\obj}
%Object language.
%    \begin{macrocode}
\providecommand{\obj}[1]{\textit{#1}}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\qu}
%Translations.
%    \begin{macrocode}
\providecommand{\qu}[1]{‘#1’}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\rc}
%Reconstructed forms.
%    \begin{macrocode}
\newcommand{\rc}[1]{*\textit{#1}}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\ort}
%Orthographic forms.
%    \begin{macrocode}
\providecommand{\ort}[1]{$\langle$#1$\rangle$}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\pnt}
%Phonetic brackets.
%    \begin{macrocode}
\providecommand{\pnt}[1]{[#1]}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\pnm}
%Phonemic slashes.
%    \begin{macrocode}
\providecommand{\pnm}[1]{/#1/}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\dbqu}
%Double quotation marks.
%    \begin{macrocode}
\providecommand{\dbqu}[1]{“#1”}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\ungr}
%Grammatically incorrect forms.
%    \begin{macrocode}
\providecommand{\ungr}[1]{*\textit{#1}}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\bad}
%Grammatically questionable forms.
%    \begin{macrocode}
\providecommand{\bad}[1]{?\textit{#1}}
%    \end{macrocode}
%\end{macro}

%\begin{macro}{\lxm}
%Lexemes.
%    \begin{macrocode}
\providecommand{\lxm}[1]{\textsc{#1}}
%    \end{macrocode}
%\end{macro}